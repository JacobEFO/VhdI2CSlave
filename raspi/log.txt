pi@raspberrypi:~/i2c $ i2cdetect -y 1
     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- -- 
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
30: -- -- -- -- -- -- -- -- 38 -- -- -- -- -- -- -- 
40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
70: -- -- -- -- -- -- -- --  
pi@raspberrypi:~/i2c $ python test1.py
pi@raspberrypi:~/i2c $ python 
Python 2.7.9 (default, Mar  8 2015, 00:52:26) 
[GCC 4.9.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import smbus
>>> bus = smbus.SMBus(1)
>>> address=0x38
>>> bus.read_byte_data(address,0x16)
97
>>> bus.read_byte_data(address,0x16)
97
>>> bus.read_byte_data(address,0x10)
0
>>> bus.read_byte_data(address,0x16)
97
>>> bus.read_byte_data(address,0x20)
2
>>> bus.write_byte_data(address,45,54)
>>> bus.read_byte_data(address,45)
54
>>> bus.write_byte_data(address,46,64)
>>> bus.write_byte_data(address,10,01)
>>> bus.write_byte_data(address,11,02)
>>> bus.read_word_data(address,10)
513
>>> bus.read_block_data(address,10)
[0]
>>> bus.read_i2c_block_data(address,10)
[1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0]
>>> exit()
pi@raspberrypi:~/i2c $ 
